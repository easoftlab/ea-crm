name: EA CRM - Deploy to Production

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-flask
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=html
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Debug - Check Vercel secrets
      run: |
        echo "🔍 Checking Vercel secrets..."
        if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "✅ VERCEL_TOKEN is set"
        else
          echo "❌ VERCEL_TOKEN is NOT set"
        fi
        if [ -n "${{ secrets.VERCEL_ORG_ID }}" ]; then
          echo "✅ VERCEL_ORG_ID is set"
        else
          echo "❌ VERCEL_ORG_ID is NOT set"
        fi
        if [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
          echo "✅ VERCEL_PROJECT_ID is set"
        else
          echo "❌ VERCEL_PROJECT_ID is NOT set"
        fi
    
    - name: Create deployment package
      run: |
        echo "Creating deployment package..."
        mkdir -p deploy_package
        
        # Copy application files
        cp -r app/ deploy_package/
        
        # Copy core files
        cp *.py deploy_package/
        cp requirements.txt deploy_package/
        cp .htaccess deploy_package/
        cp apache_config.conf deploy_package/
        
        # Copy deployment scripts
        cp -r deploy/ deploy_package/
        cp -r scripts/ deploy_package/
        
        # Create deployment info
        echo "Deployment Info:" > deploy_package/deployment_info.txt
        echo "Timestamp: $(date)" >> deploy_package/deployment_info.txt
        echo "Commit: ${{ github.sha }}" >> deploy_package/deployment_info.txt
        echo "Branch: ${{ github.ref }}" >> deploy_package/deployment_info.txt
        echo "Author: ${{ github.actor }}" >> deploy_package/deployment_info.txt
        
        # Create deployment package
        tar -czf ea_crm_deploy_$(date +%Y%m%d_%H%M%S).tar.gz deploy_package/
        
        echo "Deployment package created successfully!"
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
    
    - name: Run post-deployment tasks
      run: |
        echo "Post-deployment tasks will be handled by server-side scripts"
        echo "Database migrations and setup will run automatically"
    
    - name: Notify deployment status
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "📅 Deployment timestamp: $(date)"
        echo "🔗 Your EA CRM is now live at your domain!"
        echo "📊 Check the application logs for any issues" 